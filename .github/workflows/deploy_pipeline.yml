name: Azure Blob Deployment Pipeline

on:
  push:
    branches:
      - dev
      - qa
      - main

jobs:
  deploy-dev:
    name: ðŸš€ Deploy to Development
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Upload to Dev Blob Storage
        run: |
          az storage blob upload-batch -d '$web' -s . \
          --account-name rksstoragedev \
          --connection-string "${{ secrets.AZURE_STORAGE_CONNECTION_STRING_DEV }}"

  approve-qa:
    name: âœ… Request QA Deployment Approval
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment:
      name: qa
      url: https://portal.azure.com/
    steps:
      - name: Wait for QA Deployment Approval
        run: echo "QA deployment approval required. Approve via GitHub Actions."

  deploy-qa:
    name: ðŸš€ Deploy to QA
    runs-on: ubuntu-latest
    needs: approve-qa
    if: github.ref == 'refs/heads/qa'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Upload to QA Blob Storage
        run: |
          az storage blob upload-batch -d '$web' -s . \
          --account-name rksstorageqa \
          --connection-string "${{ secrets.AZURE_STORAGE_CONNECTION_STRING_QA }}"

  approve-prod:
    name: âœ… Request Production Deployment Approval
    needs: deploy-qa
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://portal.azure.com/
    steps:
      - name: Wait for Production Deployment Approval
        run: echo "Production deployment approval required. Approve via GitHub Actions."

  deploy-prod:
    name: ðŸš€ Deploy to Production
    runs-on: ubuntu-latest
    needs: approve-prod
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Upload to Production Blob Storage
        run: |
          az storage blob upload-batch -d '$web' -s . \
          --account-name rksstorageprod \
          --connection-string "${{ secrets.AZURE_STORAGE_CONNECTION_STRING_PROD }}"
